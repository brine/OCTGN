<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.TextBlockDefinitionItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Octide"
             xmlns:controls="clr-namespace:Octide.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="600">

    <ItemsControl >
        <controls:PropertyFieldControl Header="Unique Identifier" >

            <TextBox>
                <TextBox.Resources>
                    <local:BindingProxy x:Key="proxy" Data="{Binding }" />
                </TextBox.Resources>
                <TextBox.Text>
                    <Binding Path="Name" >
                        <Binding.ValidationRules>
                            <local:StringRestrictionValidationRule />
                            <local:UniqueValueValidationRule>
                                <local:UniqueValueValidationRule.Wrapper>
                                    <local:UniqueValueValidationWrapper UniqueValues="{Binding Data.UniqueNames, Source={StaticResource proxy}}"/>
                                </local:UniqueValueValidationRule.Wrapper>
                            </local:UniqueValueValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Font" >
            <controls:AssetControllerView DataContext="{Binding Asset}" />
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Font Size" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="FontSize" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule Minimum="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding FontSize, Mode=TwoWay}" TickFrequency="10" Minimum="1" Maximum="100"/>
            </DockPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Font Color" >
            <metro:ColorPicker SelectedColor="{Binding FontColor, Mode=TwoWay}" />
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="X Position Offset" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="Left" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding Left, Mode=TwoWay}" TickFrequency="200" Minimum="-1000" Maximum="3000"/>
            </DockPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Y Position Offset" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="Top" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding Top, Mode=TwoWay}" TickFrequency="200" Minimum="-1000" Maximum="3000"/>
            </DockPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Text Rotation" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="Rotate" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule Maximum="360" Minimum="-360" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding Rotate, Mode=TwoWay}" TickFrequency="30" Minimum="-360" Maximum="360"/>
            </DockPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Use Alternate Rotation Algorithm" >
            <metro:ToggleSwitch IsOn="{Binding AltRotate, Mode=TwoWay}" />
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Mirror Text" >
            <metro:ToggleSwitch IsOn="{Binding Flip, Mode=TwoWay}" />
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Width" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="Width" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule Minimum="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding Width, Mode=TwoWay}" Minimum="1" Maximum="3000"/>
            </DockPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Height" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="Height" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule Minimum="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding Height, Mode=TwoWay}" Minimum="1" Maximum="3000"/>
            </DockPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Horizontal Text Alignment" >
            <StackPanel Orientation="Vertical">
                <RadioButton Content="Left" IsChecked="{Binding TextAlignment, Converter={StaticResource RadioConverter}, ConverterParameter=Left}"/>
                <RadioButton Content="Center" IsChecked="{Binding TextAlignment, Converter={StaticResource RadioConverter}, ConverterParameter=Center}"/>
                <RadioButton Content="Right" IsChecked="{Binding TextAlignment, Converter={StaticResource RadioConverter}, ConverterParameter=Right}"/>
            </StackPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Vertical Text Alignment" >
            <StackPanel Orientation="Vertical">
                <RadioButton Content="Top" IsChecked="{Binding VerticalAlignment, Converter={StaticResource RadioConverter}, ConverterParameter=Top}"/>
                <RadioButton Content="Center" IsChecked="{Binding VerticalAlignment, Converter={StaticResource RadioConverter}, ConverterParameter=Center}"/>
                <RadioButton Content="Bottom" IsChecked="{Binding VerticalAlignment, Converter={StaticResource RadioConverter}, ConverterParameter=Bottom}"/>
            </StackPanel>
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Shrink Font Size to Fit Dimensions" >
            <metro:ToggleSwitch IsOn="{Binding ShrinkToFit, Mode=TwoWay}" />
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Border Color" >
            <metro:ColorPicker SelectedColor="{Binding BorderColor, Mode=TwoWay}" />
        </controls:PropertyFieldControl>

        <controls:PropertyFieldControl Header="Border Thickness" >
            <DockPanel>
                <TextBox Width="60">
                    <TextBox.Text>
                        <Binding Path="BorderThickness" >
                            <Binding.ValidationRules>
                                <local:IntegerValidationRule Minimum="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Slider Value="{Binding BorderThickness, Mode=TwoWay}" Minimum="0" Maximum="30"/>
            </DockPanel>
        </controls:PropertyFieldControl>
    </ItemsControl> 
</UserControl>
