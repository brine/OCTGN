<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.ProxyTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:gong="urn:gong-wpf-dragdrop"
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:views="clr-namespace:Octide.Views"
             xmlns:viewModel="clr-namespace:Octide.ViewModel"
             xmlns:itemModel="clr-namespace:Octide.ItemModel"
             xmlns:item="clr-namespace:Octide.ProxyTab.ItemModel"
             xmlns:controls="clr-namespace:Octide.Controls"
             mc:Ignorable="d" 
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             params:Design.Theme="Dark"
             d:DesignHeight="600" d:DesignWidth="900"
             DataContext="{Binding ProxyTabViewModel, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <DataTemplate x:Key="IdeAssetItemAdorner">
            <Border Padding="5" Background="{StaticResource DarkBackground}" BorderBrush="WhiteSmoke" BorderThickness="2">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Image Source="{Binding Asset.SafePath}" Stretch="Uniform"/>
                    <TextBlock Foreground="WhiteSmoke" Grid.Row="1" Text="{Binding Name}" />
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="IdeTextItemAdorner">
            <Border Background="{StaticResource DarkBackground}" BorderThickness="2" BorderBrush="WhiteSmoke" Padding="3">
                <TextBlock Foreground="WhiteSmoke" FontSize="13" Grid.Row="1" Text="{Binding Name}" />
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="300" MinWidth="250" />
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" Text="Templates" Foreground="{x:Static metro:AccentBrushes.Sky}" FontSize="20" FontWeight="Bold"/>
                <Button DockPanel.Dock="Bottom" Content="New Template" Margin="1" Command="{Binding AddTemplateCommand}" />
                <ListBox Style="{StaticResource OctideListBoxStyle}" ItemsSource="{Binding Templates}" SelectedValue="{Binding Templates.SelectedItem, Mode=TwoWay}" 
                             gong:DragDrop.DropHandler="{Binding Templates}">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding Templates.SelectedItem.RemoveCommand}" />
                    </ListBox.InputBindings>
                </ListBox>
            </DockPanel>
            <GridSplitter Grid.Row="1" ResizeDirection="Rows" />
            <DockPanel Grid.Row="2">
                <TextBlock DockPanel.Dock="Top" Text="Text Blocks" Foreground="{x:Static metro:AccentBrushes.Sky}" FontSize="20" FontWeight="Bold"/>
                <Button DockPanel.Dock="Bottom" Content="New Text Block" Margin="1" Command="{Binding AddTextBlockCommand}" />
                <ListBox Style="{StaticResource OctideListBoxStyle}" 
                             ItemsSource="{Binding TextBlocks}" SelectedValue="{Binding Selection, Mode=TwoWay}"
                             gong:DragDrop.DropHandler="{Binding TextBlocks}" 
                             gong:DragDrop.DragAdornerTemplate="{StaticResource IdeTextItemAdorner}" >
                </ListBox>

            </DockPanel>
        </Grid>

        <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Templates.SelectedItem}" Margin="3">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type item:TemplateModel}" >
                            <views:ProxyTemplateItemView />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
                <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

                <Viewbox Stretch="Uniform" Grid.Column="2" Margin="3" >
                    <Grid ClipToBounds="True" >
                        <Image Source="{Binding BaseImage}" Width="{Binding BaseWidth}" Height="{Binding BaseHeight}" Panel.ZIndex="0" />

                        <ItemsControl ItemsSource="{Binding ActiveOverlayLayers}" x:Name="OverlayBlocks" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type itemModel:OverlayBlockDefinitionItemModel}">
                                    <Image Source="{Binding Asset.SafePath}" Width="{Binding Width}" Height="{Binding Height}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <ItemsControl ItemsSource="{Binding ActiveTextLayers}" x:Name="TextBlocks" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding TextBlock.Left}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding TextBlock.Top}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Value}" Width="{Binding TextBlock.Width}" Height="{Binding TextBlock.Height}"
                                             TextAlignment="{Binding TextBlock.TextAlignment}" VerticalAlignment="{Binding TextBlock.VerticalAlignment}"
                                             FontSize="{Binding TextBlock.FontSize}" Foreground="{Binding TextBlock.FontBrush}" FontFamily="{Binding TextBlock.Font}"
                                                         
                                             TextWrapping="{Binding TextBlock.WordWrap}" >
                                    </TextBlock>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Viewbox>
            </Grid>


            <GridSplitter Grid.Row="1" ResizeDirection="Rows" />
            <DockPanel Grid.Row="2">

                <TextBlock DockPanel.Dock="Top" Text="Overlay Blocks" Foreground="{x:Static metro:AccentBrushes.Sky}" FontSize="20" FontWeight="Bold" />
                <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}"
                            Content="New Overlay Block" Command="{Binding AddOverlayCommand}" />
                <Border>
                    <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" 
                                 ItemsSource="{Binding OverlayBlocks}" SelectedValue="{Binding Selection, Mode=TwoWay}"
                                 gong:DragDrop.DropHandler="{Binding OverlayBlocks}"
                                 gong:DragDrop.DragAdornerTemplate="{StaticResource IdeAssetItemAdorner}">
                    </ListBox>
                </Border>
            </DockPanel>
        </Grid>

        <GridSplitter Grid.Column="3" ResizeDirection="Columns" />

        <ContentControl Grid.Column="4">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type itemModel:OverlayBlockDefinitionItemModel}">
                    <controls:ItemPropertiesView Header="Overlay Block Editor" Description="Defines an overlay image layer which is used to build a proxy card template." >
                        <views:OverlayBlockDefinitionItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>
                <DataTemplate DataType="{x:Type itemModel:TextBlockDefinitionItemModel}">
                    <controls:ItemPropertiesView Header="Text Block Editor" Description="Defines a region on the proxy card template to display text.  Each template can specify which custom property value to show.">
                        <views:TextBlockDefinitionItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>
            </ContentControl.Resources>
            <ContentControl.Content>
                <Binding Path="Selection">
                    <Binding.TargetNullValue>
                        <DataGrid BorderThickness="0" ItemsSource="{Binding StoredProxyProperties }" 
                      AutoGenerateColumns="False" Background="Transparent" RowBackground="DarkGray" AlternatingRowBackground="Gray" CanUserAddRows="True" CanUserDeleteRows="True" x:Name="ProxyDataGrid" >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="Foreground" Value="Black" />
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" Width="*" CanUserResize="False" Binding="{Binding Name}" IsReadOnly="False" Foreground="WhiteSmoke">
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Value" Width="*" CanUserResize="False" Binding="{Binding Value}" IsReadOnly="False" Foreground="WhiteSmoke">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Binding.TargetNullValue>
                </Binding>
            </ContentControl.Content>
        </ContentControl>

    </Grid>
</UserControl>
