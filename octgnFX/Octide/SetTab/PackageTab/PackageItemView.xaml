<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.SetTab.Views.PackageItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:gong="urn:gong-wpf-dragdrop"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" 
             xmlns:item="clr-namespace:Octide.SetTab.ItemModel"
             xmlns:local="clr-namespace:Octide"
             d:DesignHeight="500" d:DesignWidth="700">
    <UserControl.Resources>

        <ControlTemplate x:Key="IncludeHeader" TargetType="ContentControl" >
            <Border Background="{StaticResource BlendBrushRed}" Style="{StaticResource OctideTreeViewItemStyle}">
                <StackPanel >
                    <TextBlock Text="INCLUDE" FontWeight="Bold" />
                    <TextBlock Text="set:" />
                    <ComboBox ItemsSource="{Binding Sets}" DisplayMemberPath="Name" SelectedValue="{Binding SelectedSet, Mode=TwoWay}" />
                    <TextBlock Text="card:" />
                    <ComboBox ItemsSource="{Binding Cards}" DisplayMemberPath="Name" SelectedValue="{Binding SelectedCard, Mode=TwoWay}" />
                    <Button Content="+Property" Background="{StaticResource BlendBrushYellow}" Command="{Binding AddPropertyCommand}" />
                </StackPanel>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="OptionsHeader" TargetType="ContentControl" >
            <Border Background="{StaticResource BlendBrushPurple}" Style="{StaticResource OctideTreeViewItemStyle}">
                <StackPanel >
                    <TextBlock Text="OPTIONS" FontWeight="Bold" />
                    <Button Content="+Option" Background="{StaticResource BlendBrushBlue}" Command="{Binding AddOptionCommand}" />
                </StackPanel>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="OptionHeader" TargetType="ContentControl" >
            <Border Background="{StaticResource BlendBrushBlue}"  Style="{StaticResource OctideTreeViewItemStyle}">
                <StackPanel >
                    <TextBlock Text="OPTION" FontWeight="Bold"/>
                    <TextBlock Text="probability:" />
                    <TextBox MinWidth="50" >
                        <TextBox.Text>
                            <Binding Path="Probability" >
                                <Binding.ValidationRules>
                                    <local:DoubleValidationRule Minimum="0" Maximum="1" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Button Content="+Options" Background="{StaticResource BlendBrushPurple}" Command="{Binding AddOptionsCommand}" />
                    <Button Content="+Pick" Background="{StaticResource BlendBrushGreen}" Command="{Binding AddPickCommand}" />
                </StackPanel>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="PickHeader" TargetType="ContentControl" >
            <Border Background="{StaticResource BlendBrushGreen}" Style="{StaticResource OctideTreeViewItemStyle}">
                <StackPanel >
                    <TextBlock Text="PICK" FontWeight="Bold" />
                    <TextBlock Text="quantity:" />
                    <TextBox MinWidth="20" x:Name="TextBox" IsEnabled="{Binding IsUnlimited, Converter={StaticResource InverseBooleanConverter}}">
                        <TextBox.Text>
                            <Binding Path="Quantity" >
                                <Binding.ValidationRules>
                                    <local:IntegerValidationRule Minimum="0" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="unlimited:" />
                    <CheckBox x:Name="UnlimitedBox" IsChecked="{Binding IsUnlimited, Mode=TwoWay}" />
                    <Button Content="+Property" Background="{StaticResource BlendBrushYellow}" Command="{Binding AddPropertyCommand}" />
                </StackPanel>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="PropertyHeader" TargetType="ContentControl"  >
            <Border Background="{StaticResource BlendBrushYellow}" Style="{StaticResource OctideTreeViewItemStyle}" >
                <StackPanel >
                    <TextBlock Text="PROPERTY" FontWeight="Bold" />
                    <TextBlock Text="name:" />
                    <ComboBox ItemsSource="{Binding PropertyTabViewModel.SetPackageItems,  Source={StaticResource Locator}}" DisplayMemberPath="Name" SelectedValue="{Binding ActiveProperty, Mode=TwoWay}" />
                    <TextBlock Text="value:" />
                    <TextBox Text="{Binding Value}" />
                </StackPanel>
            </Border>
        </ControlTemplate>

        <HierarchicalDataTemplate DataType="{x:Type item:IncludeModel}" ItemsSource="{Binding Items}" >
            <ContentControl Template="{StaticResource IncludeHeader}">
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding RemoveCommand}" />
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type item:OptionsModel}" ItemsSource="{Binding Items}" >
            <ContentControl Template="{StaticResource OptionsHeader}" >
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding RemoveCommand}" />
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type item:OptionModel}" ItemsSource="{Binding Items}" >
            <ContentControl Template="{StaticResource OptionHeader}" >
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding RemoveCommand}" />
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type item:PickModel}" ItemsSource="{Binding Items}" >
            <ContentControl Template="{StaticResource PickHeader}" >
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding RemoveCommand}" />
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type item:PackagePropertyModel}" >
            <ContentControl Template="{StaticResource PropertyHeader}" >
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding RemoveCommand}" />
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </DataTemplate>


        <DataTemplate x:Key="DragAdorner">
            <DataTemplate.Resources>
                <DataTemplate DataType="{x:Type item:OptionsModel}">
                    <ContentControl Template="{StaticResource OptionsHeader}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type item:OptionModel}">
                    <ContentControl Template="{StaticResource OptionHeader}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type item:PickModel}">
                    <ContentControl Template="{StaticResource PickHeader}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type item:PackagePropertyModel}">
                    <ContentControl Template="{StaticResource PropertyHeader}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type item:IncludeModel}">
                    <ContentControl Template="{StaticResource IncludeHeader}" />
                </DataTemplate>
            </DataTemplate.Resources>
            <ContentControl Content="{Binding }"/>
        </DataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TabControl Margin="10,0,0,0" Style="{StaticResource MahApps.Styles.TabControl.AnimatedSingleRow}" 
                metro:TabControlHelper.Underlined="SelectedTabItem" metro:HeaderedControlHelper.HeaderFontSize="16">
            <TabItem Header="Pick Selectors">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TreeView Background="Transparent" 
                              ItemsSource="{Binding Items}"
                              ScrollViewer.CanContentScroll="True"
                              gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True"
                              gong:DragDrop.DropHandler="{Binding PackageDropHandler}"
                              gong:DragDrop.DragDropCopyKeyState="ControlKey" 
                              gong:DragDrop.DragAdornerTemplate="{StaticResource DragAdorner}"
                              BorderThickness="1" BorderBrush="{StaticResource MahApps.Brushes.Border.NonActive}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Content="Add Options" Command="{Binding AddOptionsCommand}" Background="{StaticResource BlendBrushPurple}" />
                        <Button Grid.Column="1" Content="Add Pick"  Command="{Binding AddPickCommand}" Background="{StaticResource BlendBrushGreen}"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Included Cards">

                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TreeView Background="Transparent"
                              ItemsSource="{Binding Includes}"
                              gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" 
                              gong:DragDrop.DropHandler="{Binding IncludeDropHandler}"
                              gong:DragDrop.DragDropCopyKeyState="ControlKey"
                              gong:DragDrop.DragAdornerTemplate="{StaticResource DragAdorner}" 
                              BorderThickness="1" BorderBrush="{StaticResource MahApps.Brushes.Border.NonActive}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                    <Button Grid.Row="1" Content="Add Include" Command="{Binding AddIncludeCommand}" Background="{DynamicResource BlendBrushRed}" />

                </Grid>
            </TabItem>
        </TabControl>

        <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

        <StackPanel Orientation="Vertical" Grid.Column="2">
            <Button Content="Generate Pack" HorizontalAlignment="Center" VerticalAlignment="Bottom" Command="{Binding GeneratePackCommand}" />


            <ListBox ItemsSource="{Binding BoosterCards}"
                 Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <Image Source="{Binding }" Height="180" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
    </Grid>
</UserControl>
