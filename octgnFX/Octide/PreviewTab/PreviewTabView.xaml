<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.PreviewTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:Octide.Views"
             xmlns:entity="clr-namespace:Octgn.DataNew.Entities;assembly=Octgn.DataNew"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:model="clr-namespace:Octide.ItemModel"
             xmlns:local="clr-namespace:Octide"
             xmlns:controls="clr-namespace:Octide.Controls"
             xmlns:gong="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             DataContext="{Binding PreviewTabViewModel, Source={StaticResource Locator}}" ClipToBounds="True"
             PreviewMouseLeftButtonUp="ControlMouseUp"
             >
    <UserControl.Resources>

        <ControlTemplate x:Key="GroupPanelTemplate" TargetType="{x:Type ListBoxItem}" >
            <Border Background="{TemplateBinding Background}">
                <Border VerticalAlignment="Stretch" Style="{StaticResource PanelControl}" MinWidth="100" PreviewMouseRightButtonUp="CreatePileActionsMenu" >
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <Image Source="{Binding Icon}" Height="16" />
                        <controls:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" Foreground="Black" FontSize="12" VerticalAlignment="Center" ClipToBounds="False" />
                    </StackPanel>
                </Border>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="CollapsedGroupPanelTemplate" TargetType="{x:Type ListBoxItem}" >
            <Border Background="{TemplateBinding Background}">
                <Border Style="{StaticResource PanelControl}" MinWidth="100" VerticalAlignment="Bottom" PreviewMouseRightButtonUp="CreatePileActionsMenu">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <Image Source="{Binding Icon}" Height="16" />
                        <controls:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" Foreground="Black" FontSize="12" VerticalAlignment="Center" ClipToBounds="False" />
                    </StackPanel>
                </Border>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="ExpandedGroupPanelTemplate" TargetType="{x:Type ListBoxItem}" >
            <Border Background="{TemplateBinding Background}">
                <Border Style="{StaticResource PanelControl}" MinWidth="300" PreviewMouseRightButtonUp="CreatePileActionsMenu">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                        <Image Source="{Binding Icon}" Height="16" />
                        <controls:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" Foreground="Black" FontSize="12" VerticalAlignment="Center" ClipToBounds="False" />
                    </StackPanel>
                </Border>
            </Border>
        </ControlTemplate>

        <Style x:Key="SpinUp" TargetType="{x:Type RepeatButton}">
            <Setter Property="FontSize" Value="9" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="Bd" SnapsToDevicePixels="True" HorizontalAlignment="Stretch"
                            BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="0,0,0,1" Background="Transparent">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#10000000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SpinDown" TargetType="{x:Type RepeatButton}">
            <Setter Property="FontSize" Value="9" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="Bd" SnapsToDevicePixels="True" HorizontalAlignment="Stretch"
                            BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="0,1,0,0" Background="Transparent">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#10000000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="CounterPanel" TargetType="{x:Type ListBoxItem}">
            <Border Background="{TemplateBinding Background}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding Icon}" Height="20" />
                    <controls:EditableTextBlock VerticalAlignment="Center" Text="{Binding Name}" Foreground="White" FontSize="12" MinWidth="20" Width="Auto" />
                    <Border BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource ControlBorderBrush}" Background="{StaticResource ControlFillBrush}" VerticalAlignment="Center">
                        <Grid Height="20" Width="60">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBox Text="{Binding DefaultValue}" BorderThickness="1" Foreground="Black" BorderBrush="Gray" Background="#11000000" FontWeight="Bold"  Grid.RowSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Right"/>
                            <RepeatButton Content="+" Command="{Binding IncreaseCommand}" Style="{StaticResource SpinUp}" Focusable="False" Grid.Column="1" Grid.Row="0" />
                            <RepeatButton Content="-" Command="{Binding DecreaseCommand}" Style="{StaticResource SpinDown}" Focusable="False" Grid.Column="1" Grid.Row="1" />
                        </Grid>
                    </Border>
                </StackPanel>
            </Border>
        </ControlTemplate>

        <Style x:Key="NewActionButton" TargetType="{x:Type Button}"  BasedOn="{StaticResource MahApps.Styles.Button}">
        </Style>

    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="300" MinWidth="300"/>
        </Grid.ColumnDefinitions>
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5" />
                <RowDefinition Height="200" MinHeight="200"/>
            </Grid.RowDefinitions>
            <Grid ClipToBounds="False" >
                <Border x:Name="PhaseControl" Panel.ZIndex="3" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Button Content="Add Phase" Foreground="Black" Padding="0" HorizontalAlignment="Stretch" Height="25" VerticalContentAlignment="Center"
                            Background="{StaticResource ControlFillBrush}" BorderBrush="{StaticResource ControlBorderBrush}" Command="{Binding AddPhaseCommand}" />
                        <ListBox Grid.Row="1" Style="{StaticResource OctideListBoxStyle}" 
                             ItemsSource="{Binding Phases}" SelectedValue="{Binding Selection}" BorderThickness="0"
                             Padding="0" gong:DragDrop.DropHandler="{Binding Phases}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource OctideListBoxItemStyle}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                                        <controls:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" CanEdit="{Binding CanEdit}" Padding="3" Background="#444444" Foreground="WhiteSmoke" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" ClipToBounds="False" />
                                                        <Border BorderThickness="3" BorderBrush="Gray">
                                                            <Image Source="{Binding Icon}" StretchDirection="DownOnly" MaxHeight="50" />
                                                        </Border>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                </Border>
                <Border Background="{Binding Table.BackgroundImage}" MouseRightButtonUp="CreateTableActionsMenu" 
                                    gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding TableDropHandler}" ClipToBounds="True" >
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftClick" Command="{Binding ClickTableCommand}" />
                    </Border.InputBindings>
                    <Viewbox Stretch="Uniform" >
                        <AdornerDecorator >
                            <AdornerDecorator.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding Table.Zoom}" ScaleY="{Binding Table.Zoom}" CenterX="0" CenterY="0" />
                                    <TranslateTransform X="{Binding Table.Offset.X}" Y="{Binding Table.Offset.Y}" />
                                </TransformGroup>
                            </AdornerDecorator.RenderTransform>
                            <Canvas x:Name="TableCanvas" Width="{Binding Table.Width}" Height="{Binding Table.Height}" gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding TableDropHandler}">
                                <Grid x:Name="boardView" Focusable="False" DataContext="{Binding ActiveBoard}" Canvas.Left="{Binding XPos}" Canvas.Top="{Binding YPos}"
                                      MouseMove="BoardMove" MouseLeave="ResetCursor" Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}"
                                      MouseLeftButtonDown="BoardMouseDown" MouseLeftButtonUp="BoardMouseUp">
                                    <Image Source="{Binding Icon}" Width="{Binding Width}" Height="{Binding Height}"/>
                                    <Border Width="{Binding Width}" Height="{Binding Height}"  Background="Transparent"
                                                BorderBrush="#88FF7F50" BorderThickness="1" ClipToBounds="False">
                                        <Border HorizontalAlignment="Center" VerticalAlignment="Top" Background="#AA333333">
                                            <TextBlock Foreground="White" Margin="2" FontSize="12" TextWrapping="Wrap">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0:0}, {1:0}">
                                                        <Binding Path="XPos" />
                                                        <Binding Path="YPos" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Border>
                                    </Border>
                                </Grid>
                                <ItemsControl ItemsSource="{Binding Cards}" Focusable="False" x:Name="cardsView" gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding TableDropHandler}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Canvas.Left="{Binding X, Mode=TwoWay}" Canvas.Top="{Binding Y,Mode=TwoWay}" 
                                                  MouseLeftButtonDown="CardMouseDown" MouseLeftButtonUp="CardMouseUp"
                                                  MouseRightButtonUp="CreateCardActionsMenu" 
                                                  MouseMove="CardMouseMove" MouseLeave="ResetCursor" >

                                                <Rectangle Width="{Binding CardWidth}" Height="{Binding CardHeight}" RadiusX="{Binding CardCornerRadius}" RadiusY="{Binding CardCornerRadius}" >
                                                    <Rectangle.Fill>
                                                        <ImageBrush ImageSource="{Binding CardImage}" AlignmentX="Center" AlignmentY="Center" Stretch="Uniform"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Border Width="{Binding CardWidth}" Height="{Binding CardHeight}" BorderBrush="#88FF7F50" BorderThickness="1" Background="Transparent">
                                                    <Border HorizontalAlignment="Center" VerticalAlignment="Top" Background="#AA333333">
                                                        <TextBlock Foreground="White" Margin="2" FontSize="12" TextWrapping="Wrap">
                                                            <TextBlock.Text>
                                                                <MultiBinding StringFormat="{}{0}, {1:0}">
                                                                    <Binding Path="X" />
                                                                    <Binding Path="Y" />
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </Border>
                                                </Border>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="Canvas.Left" Value="{Binding X}" />
                                            <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas Width="{Binding Table.Width}" Height="{Binding Table.Height}" ClipToBounds="False" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Canvas>
                        </AdornerDecorator>
                    </Viewbox>
                </Border>
            </Grid>

            <GridSplitter Grid.Row="1"  ResizeDirection="Rows" />

            <TabControl Grid.Row="2" Margin="0 5 0 0" Padding="0" BorderThickness="0" >
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,4,4" Margin="2,0,2,2">
                                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="White" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="DarkGray" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.ItemContainerStyle>

                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="Global Tab" VerticalAlignment="Center" Margin="0,0,5,0" />
                            <Border BorderBrush="Black" BorderThickness="2" Padding="1" Background="#DDDDDD" >
                                <controls:EditableTextBlock Text="{Binding GlobalSummary}" Margin="5,0,0,0" FontSize="11" MinWidth="25" VerticalAlignment="Center" Foreground="Black" />
                            </Border>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <DockPanel >
                            <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}" 
                                Content="New Counter" Command="{Binding AddGlobalCounterCommand}" />
                            <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" BorderThickness="0"
                                     ItemsSource="{Binding GlobalCounters}" 
                                     SelectedValue="{Binding Selection}"
                                     gong:DragDrop.DropHandler="{Binding GlobalCounters}"
                                     Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource OctideHorizontalListBoxItemStyle}">
                                        <Setter Property="Template" Value="{StaticResource CounterPanel}" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                        <DockPanel Grid.Row="1">
                            <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}"
                                 Content="New Pile"  Command="{Binding AddGlobalPileCommand}" />
                            <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" BorderThickness="0"
                                 ItemsSource="{Binding GlobalPiles}" SelectedValue="{Binding Selection}"
                                 Focusable="False"
                                 gong:DragDrop.DropHandler="{Binding GlobalPiles}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource OctideHorizontalListBoxItemStyle}" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ViewState}" Value="Pile">
                                                <Setter Property="Template" Value="{StaticResource GroupPanelTemplate }" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ViewState}" Value="Collapsed">
                                                <Setter Property="Template" Value="{StaticResource CollapsedGroupPanelTemplate }" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ViewState}" Value="Expanded">
                                                <Setter Property="Template" Value="{StaticResource ExpandedGroupPanelTemplate }" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>

                        </DockPanel>
                    </Grid>
                </TabItem>

                <TabItem IsSelected="True">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="Player Tab" VerticalAlignment="Center" Margin="0,0,5,0" />
                            <Border BorderBrush="Black" BorderThickness="2" Padding="1" Background="#DDDDDD" >
                                <controls:EditableTextBlock Text="{Binding Summary}" FontSize="11" MinWidth="25" VerticalAlignment="Center" Foreground="Black" />
                            </Border>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <DockPanel >
                            <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}" 
                                    Content="New Counter" Command="{Binding AddCounterCommand}" />

                            <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" BorderThickness="0"
                                     ItemsSource="{Binding Counters}" SelectedValue="{Binding Selection}" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" Focusable="False"
                                     gong:DragDrop.DropHandler="{Binding Counters}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource OctideHorizontalListBoxItemStyle}">
                                        <Setter Property="Template" Value="{StaticResource CounterPanel}" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                        <DockPanel Grid.Row="1">
                            <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}"
                                    Content="New Pile" Command="{Binding AddPileCommand}"/>
                            <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" BorderThickness="0"
                                     ItemsSource="{Binding Piles}" SelectedValue="{Binding Selection}" 
                                     Focusable="False" 
                                     gong:DragDrop.DropHandler="{Binding Piles}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource OctideHorizontalListBoxItemStyle}" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ViewState}" Value="Pile">
                                                <Setter Property="Template" Value="{StaticResource GroupPanelTemplate }" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ViewState}" Value="Collapsed">
                                                <Setter Property="Template" Value="{StaticResource CollapsedGroupPanelTemplate }" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ViewState}" Value="Expanded">
                                                <Setter Property="Template" Value="{StaticResource ExpandedGroupPanelTemplate }" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Card Sizes" >
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}"
                                Content="New Size" Command="{Binding AddSizeCommand}" />

                        <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" 
                                 ItemsSource="{Binding CardSizes}" SelectedValue="{Binding Selection}"
                                 gong:DragDrop.DropHandler="{Binding CardSizes}" >
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="2" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Game Boards">
                    <DockPanel >
                        <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}"
                                Content="New Board" Command="{Binding AddBoardCommand}" />

                        <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}"
                             ItemsSource="{Binding Boards }" SelectedValue="{Binding Selection}" >
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="2" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </Grid>
        <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

        <ContentControl Margin="0,0,10,0" Grid.Column="2" Content="{Binding Selection}" >
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type model:PileItemModel}" >
                    <controls:ItemPropertiesView Header="Card Pile Editor" >
                        <views:PileItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:CounterItemModel}" >
                    <controls:ItemPropertiesView Header="Player Counter Editor" >
                        <views:CounterItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:SizeItemModel}" >
                    <controls:ItemPropertiesView Header="Card Size Editor" >
                        <views:SizeItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:BoardItemModel}" >
                    <controls:ItemPropertiesView Header="Game Board Editor" >
                        <views:BoardItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:PhaseItemModel}" >
                    <controls:ItemPropertiesView Header="Phase Editor" >
                        <views:PhaseItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:TableItemModel}" >
                    <controls:ItemPropertiesView Header="Table Editor" >
                        <views:TableItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:ActionItemModel}" >
                    <controls:ItemPropertiesView Header="Action Command Editor" >
                        <views:ActionItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:ActionSeparatorItemModel}" >
                    <controls:ItemPropertiesView Header="Action Separator Editor" >
                        <views:ActionSeparatorItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:ActionSubmenuItemModel}" >
                    <controls:ItemPropertiesView Header="Action Submenu Editor" >
                        <views:ActionSubmenuItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>

        <Popup x:Name="ActionMenuPopup" Placement="MousePoint" StaysOpen="False" Focusable="True">
            <Popup.Resources>
                <Style TargetType="{x:Type TreeView}">
                    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                    <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Window.Background }" />
                    <Setter Property="gong:DragDrop.IsDragSource" Value="True" />
                    <Setter Property="gong:DragDrop.IsDropTarget" Value="True" />
                    <Setter Property="gong:DragDrop.DropHandler" Value="{Binding ActionsDropHandler }" />
                    <Setter Property="gong:DragDrop.DragDropCopyKeyState" Value="ControlKey" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TreeViewItem}"  >
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Highlight}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Gray.MouseOver}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="False" />
                                            <Condition Property="IsSelected" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
                                    </MultiTrigger>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="False" >
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
                <DataTemplate DataType="{x:Type model:ActionItemModel}" >
                    <Grid ContextMenu="{StaticResource ListBoxContextMenu}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A" Width="*" />
                            <ColumnDefinition SharedSizeGroup="B" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <controls:EditableTextBlock Text="{Binding Name}" Margin="0,0,4,0" FontSize="12" Foreground="WhiteSmoke">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </controls:EditableTextBlock>
                        <TextBlock Text="{Binding Shortcut}" Margin="0,0,4,0" Grid.Column="1" FontSize="10" Foreground="#999999"/>
                    </Grid>
                </DataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:ActionSubmenuItemModel}" ItemsSource="{Binding Items}" >
                    <Grid ContextMenu="{StaticResource ListBoxContextMenu}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A" Width="*" />
                            <ColumnDefinition SharedSizeGroup="B" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <controls:EditableTextBlock Text="{Binding Name}" ContextMenu="{StaticResource ListBoxContextMenu}" Margin="0,0,4,0" FontSize="12" Grid.ColumnSpan="2" Foreground="WhiteSmoke" />
                    </Grid>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type model:ActionSeparatorItemModel}" >
                    <Grid ContextMenu="{StaticResource ListBoxContextMenu}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A" Width="*" />
                            <ColumnDefinition SharedSizeGroup="B" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="2" Height="1" HorizontalAlignment="Stretch" Margin="5,10,5,10" Fill="{StaticResource MahApps.Brushes.Separator}" ContextMenu="{StaticResource ListBoxContextMenu}"/>
                    </Grid>
                </DataTemplate>
            </Popup.Resources>

            <StackPanel Orientation="Vertical" Background="#333333" >
                <StackPanel x:Name="GroupActionsPanel" Orientation="Vertical" Margin="3">
                    <TextBlock Padding="6,3,6,3" Text="{Binding Name}" Background="#555555" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" />
                    <Rectangle Height="1" Fill="WhiteSmoke" />
                    <TreeView x:Name="GroupActionsTreeView" BorderThickness="0" ItemsSource="{Binding GroupActions, Mode=TwoWay}" SelectedItemChanged="ClickGroupAction" />
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Add Action" Command="{Binding NewActionCommand}" CommandParameter="{Binding GroupActions}"/>
                        <Button Content="Add Submenu" Command="{Binding NewSubmenuCommand}" CommandParameter="{Binding GroupActions}"/>
                        <Button Content="Add Separator" Command="{Binding NewSeparatorCommand}" CommandParameter="{Binding GroupActions}"/>
                    </StackPanel>

                </StackPanel>
                <StackPanel x:Name="CardActionsPanel" Orientation="Vertical" Margin="3" HorizontalAlignment="Stretch" >
                    <TextBlock Padding="6,3,6,3" Text="Card" Background="#555555" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" />
                    <Rectangle Height="1" Fill="WhiteSmoke" />
                    <TreeView x:Name="CardActionsTreeView" HorizontalAlignment="Stretch" BorderThickness="0" ItemsSource="{Binding CardActions, Mode=TwoWay}" SelectedItemChanged="ClickCardAction"  />
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Add Action" Command="{Binding NewActionCommand}" CommandParameter="{Binding CardActions}"/>
                        <Button Content="Add Submenu" Command="{Binding NewSubmenuCommand}" CommandParameter="{Binding CardActions}"/>
                        <Button Content="Add Separator" Command="{Binding NewSeparatorCommand}" CommandParameter="{Binding CardActions}"/>
                    </StackPanel>
                </StackPanel>

                <Rectangle Height="1" Margin="5,10,5,10" Fill="WhiteSmoke" />

                <ContentControl Content="{Binding }" >
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type model:TableItemModel}" />
                        <DataTemplate DataType="{x:Type model:PileItemModel}">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Remove Group" Command="{Binding RemoveCommand}" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CanRemove}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="Copy Group" Command="{Binding CopyCommand}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CanCopy}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="Insert Group" Command="{Binding InsertCommand}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CanInsert}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </StackPanel>
        </Popup>
    </Grid>
</UserControl>
