<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<controls:DecorableWindow 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:Octgn.Controls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d" x:Class="Octgn.Windows.ImageManager" x:Name="Me"
        xmlns:vm="clr-namespace:Octgn.ViewModels"
        Title="OCTGN Image Manager" WindowIcon="/OCTGN;component/Resources/Icons/setting_tools.png"
        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" CanResize="True" ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterOwner" Width="900" Height="600" d:DesignHeight="452" >
    <controls:DecorableWindow.DataContext>
        <vm:ImageManagerViewModel x:Name="ViewModel" />
    </controls:DecorableWindow.DataContext>
    <controls:DecorableWindow.Resources>
        <BitmapImage x:Key="DefaultGameImage" UriSource="/OCTGN;component/Resources/close.png" />
        <BitmapImage x:Key="LoadingImage" UriSource="/OCTGN;component/Resources/loading.gif" />

        <DataTemplate x:Key="ItemLoadingTemplate">
            <Border Padding="4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Template="{StaticResource LogoTemplate }" Grid.RowSpan="2"  />
                    <TextBlock Text="Loading..." FontSize="14" Grid.Column="1" FontWeight="Bold" />
                    <TextBlock Text="{Binding Directory.FullName}" Grid.Row="1" Grid.Column="1" FontSize="9" />
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="ValidSetItemTemplate" >
            <Border x:Name="border"
                    Padding="4" >
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static vm:ImageManagerItemStatus.Unknown}" >
                                <Setter Property="Background" Value="#99440000" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="1" FontSize="16">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Name}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static vm:ImageManagerItemStatus.Unknown}" >
                                        <Setter Property="Text" Value="Unknown Set" />
                                    </DataTrigger>

                                </Style.Triggers>

                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Id}" />
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="InvalidItemTemplate">
            <Border Padding="10" HorizontalAlignment="Stretch" Background="#99111111">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="Invalid Folder" FontSize="16" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Directory.FullName}" Grid.Row="1" FontSize="12" />
                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2" Margin="4,10,4,4" >
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Button Style="{StaticResource FlatDarkRedButtonStyle}" Padding="6,0" 
                                                    Content="Delete Contents" Command="{Binding DeleteImagesButton}" />
                        <Button Style="{StaticResource FlatDarkButtonStyle}" Padding="6,0"
                                                    Margin="5,0" Content="Browse Folder" Command="{Binding BrowseFolderButton}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ValidGameItemTemplate">
            <Border x:Name="border" Padding="4" HorizontalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Unknown}" >
                                <Setter Property="Background" Value="#99461111" />
                                <Setter Property="BorderBrush" Value="DarkRed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Installed}" >
                                <Setter Property="Background" Value="#992E2B2B" />
                                <Setter Property="BorderBrush" Value="Black" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Image Height="50" Stretch="UniformToFill" Grid.RowSpan="2" Margin="0,0,10,0" 
                                       Source="{Binding Path=GameIcon, TargetNullValue={StaticResource DefaultGameImage}}" 
                                       ImageFailed="GameIcon_ImageFailed" />
                    <StackPanel Orientation="Vertical" Grid.Column="1">
                        <TextBlock FontSize="16" Text="{Binding Name}" />
                        <TextBlock Text="{Binding Id}" />
                        <TextBlock Foreground="LightGray">
                                       <!-- <Run Text="{Binding InstalledSetsCount, Mode=OneWay}" /> -->
                                        <Run Text="sets installed (" />
                                        <Run Text="{Binding TotalSetCount, Mode=OneWay}" />
                                        <Run Text=" sets found )" />
                        </TextBlock>
                    </StackPanel>
                    <Border Grid.Row="2" Grid.ColumnSpan="2" Margin="4,10,4,4" >
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                <ToggleButton Margin="3,0" Command="{Binding ShowSetsToggleButton}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                            <Setter Property="Content" Value="Hide Sets" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                                    <Setter Property="Content" Value="Show Sets" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Button Style="{StaticResource FlatDarkRedButtonStyle}" Padding="6,0" 
                                                    Content="Delete Content" Command="{Binding DeleteImagesButton}" />
                                <Button Style="{StaticResource FlatDarkButtonStyle}" Padding="6,0"
                                                    Margin="5,0" Content="Browse Folder" Command="{Binding BrowseFolderButton}" />
                            </StackPanel>
                            <ListBox ItemsSource="{Binding Sets, IsAsync=True}" MaxHeight="400"
                                                 SelectedValue="{Binding ElementName=Me, Path=DataContext.SelectedSet}"
                                                 Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter} }">
                                <ListBox.ItemTemplate>

                                    <DataTemplate >
                                        <ContentControl Content="{Binding }"  >
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Unloaded}">
                                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ItemLoadingTemplate}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Invalid}">
                                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource InvalidItemTemplate}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Unknown}">
                                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ValidSetItemTemplate}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Installed}">
                                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ValidSetItemTemplate}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="ItemManagerBox" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="1" Text="{Binding Id}" />
                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Name}" />
                <Image Grid.RowSpan="2" Visibility="{Binding IsInstalled, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" Source="/OCTGN;component/Resources/close.png" />
            </Grid>
        </DataTemplate>
    </controls:DecorableWindow.Resources>

    <Border CornerRadius="0,0,5,5" Padding="10,3,10,10">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ListBox x:Name="GamesList" ScrollViewer.CanContentScroll="False" ItemsSource="{Binding Games}" >
                <ListBox.ItemTemplate>
                    <DataTemplate >
                        <ContentControl Content="{Binding }"  >
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Unloaded}">
                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ItemLoadingTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Invalid}">
                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource InvalidItemTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Unknown}">
                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ValidGameItemTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static vm:ImageManagerItemStatus.Installed}">
                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ValidGameItemTemplate}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Grid Grid.Column="1" Visibility="{Binding IsSetSelected,Converter={StaticResource BooleanToVisibilityConverter} }">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding SelectedSet.Name}" Foreground="Red"/>
                <ListBox Grid.Row="1"
                         ItemsSource="{Binding Cards, IsAsync=True}"
                         Background="Transparent"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}" />
                    </ListBox.Style>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="100" Height="150">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentControl Template="{StaticResource LogoTemplate}" />
                                <Image Source="{Binding Image.Image, IsAsync=True, TargetNullValue={x:Null}}" />
                                <TextBlock Grid.Row="1" Text="{Binding Alternate.Name}" />
                                <TextBlock Grid.Row="2" Text="{Binding Alternate.Type}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <GridSplitter Grid.Row="2" ResizeDirection="Rows" HorizontalAlignment="Stretch" Height="51" />
                <ListBox Grid.Row="3" ItemsSource="{Binding Images, IsAsync=True}"
                         Background="Transparent"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}" />
                    </ListBox.Style>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="100" Height="150">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentControl Template="{StaticResource LogoTemplate}" />
                                <TextBlock Grid.Row="1" Text="{Binding Name}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Grid>
    </Border>
</controls:DecorableWindow>
