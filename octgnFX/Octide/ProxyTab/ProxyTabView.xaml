<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.ProxyTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:gong="urn:gong-wpf-dragdrop"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Octide"
             xmlns:views="clr-namespace:Octide.Views"
             xmlns:viewModel="clr-namespace:Octide.ViewModel"
             xmlns:itemModel="clr-namespace:Octide.ItemModel"
             xmlns:item="clr-namespace:Octide.ProxyTab.ItemModel"
             xmlns:controls="clr-namespace:Octide.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900"
             DataContext="{Binding ProxyTabViewModel, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <DataTemplate x:Key="IdeAssetItemAdorner">
            <Border Padding="5" BorderThickness="2"
                    Background="{StaticResource MahApps.Brushes.Window.Background}" 
                    BorderBrush="{StaticResource MahApps.Brushes.Control.Border}">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Image Source="{Binding Asset.SafePath}" Stretch="Uniform"/>
                    <TextBlock Foreground="{StaticResource MahApps.Brushes.Text}" Grid.Row="1" Text="{Binding Name}" />
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="IdeTextItemAdorner">
            <Border BorderThickness="2"  Padding="3"
                    Background="{StaticResource MahApps.Brushes.Window.Background}"
                    BorderBrush="{StaticResource MahApps.Brushes.Control.Border}">
                <TextBlock Foreground="{StaticResource MahApps.Brushes.Text}" FontSize="13" Text="{Binding Name}" />
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="300" MinWidth="250" />
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" Text="Templates" Style="{StaticResource OctideTitleStyle}"/>
                <Button DockPanel.Dock="Top" Content="New Template" Command="{Binding AddTemplateCommand}" />
                <ListBox Style="{StaticResource OctideListBoxStyle}" Focusable="True"
                         ItemsSource="{Binding Templates}" SelectedValue="{Binding Templates.SelectedItem, Mode=TwoWay}" 
                             gong:DragDrop.DropHandler="{Binding Templates}">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding Templates.SelectedItem.RemoveCommand}" />
                    </ListBox.InputBindings>
                </ListBox>
            </DockPanel>
            <GridSplitter Grid.Row="1" ResizeDirection="Rows" />
            <DockPanel Grid.Row="2">
                <TextBlock DockPanel.Dock="Top" Text="Text Blocks" Style="{StaticResource OctideTitleStyle}"/>
                <Button DockPanel.Dock="Top" Content="New Text Block" Command="{Binding AddTextBlockCommand}" />
                <ListBox Style="{StaticResource OctideListBoxStyle}" Focusable="True"
                             ItemsSource="{Binding TextBlocks}" SelectedValue="{Binding Selection, Mode=TwoWay}"
                             gong:DragDrop.DropHandler="{Binding TextBlocks}" 
                             gong:DragDrop.DragAdornerTemplate="{StaticResource IdeTextItemAdorner}" >
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding TextBlocks.SelectedItem.RemoveCommand}" />
                    </ListBox.InputBindings>
                </ListBox>

            </DockPanel>
        </Grid>

        <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Templates.SelectedItem}" Margin="3">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type item:TemplateModel}" >
                            <views:ProxyTemplateItemView />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
                <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

                <Viewbox Stretch="Uniform" Grid.Column="2" Margin="3" >
                    <Grid ClipToBounds="True" >
                        <Grid.Resources>

                            <DataTemplate DataType="{x:Type itemModel:OverlayBlockDefinitionItemModel}" >
                                <Image Source="{Binding Asset.SafePath}" Width="{Binding Width}" Height="{Binding Height}" >
                                </Image>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type itemModel:ArtCropDefinitionItemModel}" >
                                <Border Width="{Binding Width}" Height="{Binding Height}" >
                                    <TextBlock Text="ART CROP OVERLAY" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                                            <GradientStop Color="Red" Offset="0" />
                                            <GradientStop Color="Blue" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewModel:ProxyTextLinkItemModel}" >
                                <Border Height="{Binding TextBlock.Height}" Width="{Binding TextBlock.Width}"  >
                                    <local:OutlinedTextBlock Text="{Binding Value}" 
                                                                 TextAlignment="{Binding TextBlock.TextAlignment}" 
                                                                 VerticalAlignment="{Binding TextBlock.VerticalAlignment}"                                      
                                                                 FontSize="{Binding TextBlock.FontSize}" 
                                                                 StrokeThickness="{Binding TextBlock.BorderThickness}"
                                                                 Fill="{Binding TextBlock.FontBrush}"
                                                                 Stroke="{Binding TextBlock.BorderBrush}"
                                                                 FontFamily="{Binding TextBlock.Font}"
                                                                 RenderTransformOrigin="0.5, 0.5"
                                                                 TextWrapping="{Binding TextBlock.WordWrap}" >
                                        <local:OutlinedTextBlock.Style>
                                            <Style TargetType="{x:Type local:OutlinedTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TextBlock.Flip}" Value="True">
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleX="-1" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </local:OutlinedTextBlock.Style>
                                    </local:OutlinedTextBlock>
                                </Border>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type itemModel:TextBlockDefinitionItemModel}" >
                                <Border Height="{Binding Height}" Width="{Binding Width}"  >
                                    <local:OutlinedTextBlock Text="YOUR TEXT HERE!" 
                                                                 TextAlignment="{Binding TextAlignment}" 
                                                                 VerticalAlignment="{Binding VerticalAlignment}"                                      
                                                                 FontSize="{Binding FontSize}" 
                                                                 StrokeThickness="{Binding BorderThickness}"
                                                                 Fill="{Binding FontBrush}"
                                                                 Stroke="{Binding BorderBrush}"
                                                                 FontFamily="{Binding Font}"
                                                                 RenderTransformOrigin="0.5, 0.5"
                                                                 TextWrapping="{Binding WordWrap}" >
                                        <local:OutlinedTextBlock.Style>
                                            <Style TargetType="{x:Type local:OutlinedTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Flip}" Value="True">
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleX="-1" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </local:OutlinedTextBlock.Style>
                                    </local:OutlinedTextBlock>
                                </Border>
                            </DataTemplate>

                        </Grid.Resources>
                        <Image Source="{Binding BaseImage}" Width="{Binding BaseWidth}" Height="{Binding BaseHeight}" Panel.ZIndex="0" />

                        <ItemsControl ItemsSource="{Binding ActiveOverlayLayers}" x:Name="OverlayBlocks" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform X="{Binding Left}" Y="{Binding Top}" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>

                        <ItemsControl ItemsSource="{Binding ActiveTextLayers}" x:Name="TextBlocks" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <RotateTransform Angle="{Binding TextBlock.Rotate}"/>
                                                <TranslateTransform X="{Binding TextBlock.Left}" Y="{Binding TextBlock.Top}" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Grid>
                </Viewbox>
            </Grid>

            <GridSplitter Grid.Row="1" ResizeDirection="Rows" />
            <DockPanel Grid.Row="2">

                <TextBlock DockPanel.Dock="Top" Text="Overlay Blocks" Style="{StaticResource OctideTitleStyle}" />
                <Button DockPanel.Dock="Right" Style="{StaticResource NewItemButton}"
                            Content="New Overlay Block" Command="{Binding AddOverlayCommand}" />
                <Border>
                    <ListBox Style="{StaticResource OctideHorizontalListBoxStyle}" Focusable="True"
                                 ItemsSource="{Binding OverlayBlocks}" SelectedValue="{Binding Selection, Mode=TwoWay}"
                                 gong:DragDrop.DropHandler="{Binding OverlayBlocks}"
                                 gong:DragDrop.DragAdornerTemplate="{StaticResource IdeAssetItemAdorner}">
                        <ListBox.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding OverlayBlocks.SelectedItem.RemoveCommand}" />
                        </ListBox.InputBindings>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal" Margin="2" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </Border>
            </DockPanel>
        </Grid>

        <GridSplitter Grid.Column="3" ResizeDirection="Columns" />

        <ContentControl Grid.Column="4">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type itemModel:OverlayBlockDefinitionItemModel}">
                    <controls:ItemPropertiesView Header="Overlay Block Editor" Description="Defines an overlay image layer which is used to build a proxy card template." >
                        <views:OverlayBlockDefinitionItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>
                <DataTemplate DataType="{x:Type itemModel:TextBlockDefinitionItemModel}">
                    <controls:ItemPropertiesView Header="Text Block Editor" Description="Defines a region on the proxy card template to display text.  Each template can specify which custom property value to show.">
                        <views:TextBlockDefinitionItemView />
                    </controls:ItemPropertiesView>
                </DataTemplate>
                <DataTemplate DataType="{x:Type item:OverlayLinkModel}">
                    <ContentControl Content="{Binding LinkedBlock}" />
                </DataTemplate>
            </ContentControl.Resources>
            <ContentControl.Content>
                <Binding Path="Selection">
                    <Binding.TargetNullValue>
                        <DataGrid BorderThickness="0" ItemsSource="{Binding StoredProxyProperties }" Style="{StaticResource MahApps.Styles.DataGrid}"
                                  GridLinesVisibility="All" Focusable="True"
                      AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" x:Name="ProxyDataGrid" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" Width="*" CanUserResize="False" Binding="{Binding Name}" IsReadOnly="False" >
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Value" Width="*" CanUserResize="False" Binding="{Binding Value}" IsReadOnly="False" >
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Binding.TargetNullValue>
                </Binding>
            </ContentControl.Content>
        </ContentControl>

    </Grid>
</UserControl>
